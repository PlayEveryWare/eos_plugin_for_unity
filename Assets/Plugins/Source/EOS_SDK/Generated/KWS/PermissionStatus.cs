// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.KWS
{
	public class PermissionStatus : ISettable
	{
		/// <summary>
		/// Name of the permission
		/// </summary>
		public string Name { get; set; }

		/// <summary>
		/// Status of the permission
		/// </summary>
		public KWSPermissionStatus Status { get; set; }

		internal void Set(PermissionStatusInternal? other)
		{
			if (other != null)
			{
				Name = other.Value.Name;
				Status = other.Value.Status;
			}
		}

		public void Set(object other)
		{
			Set(other as PermissionStatusInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct PermissionStatusInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_Name;
		private KWSPermissionStatus m_Status;

		public string Name
		{
			get
			{
				string value;
				Helper.TryMarshalGet(m_Name, out value);
				return value;
			}

			set
			{
				Helper.TryMarshalSet(ref m_Name, value);
			}
		}

		public KWSPermissionStatus Status
		{
			get
			{
				return m_Status;
			}

			set
			{
				m_Status = value;
			}
		}

		public void Set(PermissionStatus other)
		{
			if (other != null)
			{
				m_ApiVersion = KWSInterface.PermissionstatusApiLatest;
				Name = other.Name;
				Status = other.Status;
			}
		}

		public void Set(object other)
		{
			Set(other as PermissionStatus);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_Name);
		}
	}
}