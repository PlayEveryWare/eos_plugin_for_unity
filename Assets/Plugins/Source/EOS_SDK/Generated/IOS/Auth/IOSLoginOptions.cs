// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Auth
{
	/// <summary>
	/// Input parameters for the <see cref="AuthInterface.Login" /> function.
	/// </summary>
	public class IOSLoginOptions
	{
		/// <summary>
		/// Credentials specified for a given login method
		/// </summary>
		public IOSCredentials Credentials { get; set; }

		/// <summary>
		/// Auth scope flags are permissions to request from the user while they are logging in. This is a bitwise-or union of <see cref="AuthScopeFlags" /> flags defined above
		/// </summary>
		public AuthScopeFlags ScopeFlags { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct IOSLoginOptionsInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_Credentials;
		private AuthScopeFlags m_ScopeFlags;

		public IOSCredentials Credentials
		{
			set
			{
				Helper.TryMarshalSet<IOSCredentialsInternal, IOSCredentials>(ref m_Credentials, value);
			}
		}

		public AuthScopeFlags ScopeFlags
		{
			set
			{
				m_ScopeFlags = value;
			}
		}

		public void Set(IOSLoginOptions other)
		{
			if (other != null)
			{
				m_ApiVersion = AuthInterface.LoginApiLatest;
				Credentials = other.Credentials;
				ScopeFlags = other.ScopeFlags;
			}
		}

		public void Set(object other)
		{
			Set(other as IOSLoginOptions);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_Credentials);
		}
	}
}