// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.RTCAdmin
{
	/// <summary>
	/// Input parameters for the <see cref="RTCAdminInterface.CopyUserTokenByUserId" /> function.
	/// </summary>
	public class CopyUserTokenByUserIdOptions
	{
		/// <summary>
		/// The Product User ID for the user whose user token we're copying.
		/// </summary>
		public ProductUserId TargetUserId { get; set; }

		/// <summary>
		/// Query identifier received as part of a previous query.
		/// <seealso cref="QueryJoinRoomTokenCompleteCallbackInfo" />
		/// </summary>
		public uint QueryId { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct CopyUserTokenByUserIdOptionsInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_TargetUserId;
		private uint m_QueryId;

		public ProductUserId TargetUserId
		{
			set
			{
				Helper.TryMarshalSet(ref m_TargetUserId, value);
			}
		}

		public uint QueryId
		{
			set
			{
				m_QueryId = value;
			}
		}

		public void Set(CopyUserTokenByUserIdOptions other)
		{
			if (other != null)
			{
				m_ApiVersion = RTCAdminInterface.CopyusertokenbyuseridApiLatest;
				TargetUserId = other.TargetUserId;
				QueryId = other.QueryId;
			}
		}

		public void Set(object other)
		{
			Set(other as CopyUserTokenByUserIdOptions);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_TargetUserId);
		}
	}
}