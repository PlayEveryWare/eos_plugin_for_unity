// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.AntiCheatCommon
{
	public class LogGameRoundStartOptions
	{
		/// <summary>
		/// Optional game session or match identifier useful for some backend API integrations
		/// </summary>
		public string SessionIdentifier { get; set; }

		/// <summary>
		/// Optional name of the map being played
		/// </summary>
		public string LevelName { get; set; }

		/// <summary>
		/// Optional name of the game mode being played
		/// </summary>
		public string ModeName { get; set; }

		/// <summary>
		/// Optional length of the game round to be played, in seconds. If none, use 0.
		/// </summary>
		public uint RoundTimeSeconds { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct LogGameRoundStartOptionsInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_SessionIdentifier;
		private System.IntPtr m_LevelName;
		private System.IntPtr m_ModeName;
		private uint m_RoundTimeSeconds;

		public string SessionIdentifier
		{
			set
			{
				Helper.TryMarshalSet(ref m_SessionIdentifier, value);
			}
		}

		public string LevelName
		{
			set
			{
				Helper.TryMarshalSet(ref m_LevelName, value);
			}
		}

		public string ModeName
		{
			set
			{
				Helper.TryMarshalSet(ref m_ModeName, value);
			}
		}

		public uint RoundTimeSeconds
		{
			set
			{
				m_RoundTimeSeconds = value;
			}
		}

		public void Set(LogGameRoundStartOptions other)
		{
			if (other != null)
			{
				m_ApiVersion = AntiCheatCommonInterface.LoggameroundstartApiLatest;
				SessionIdentifier = other.SessionIdentifier;
				LevelName = other.LevelName;
				ModeName = other.ModeName;
				RoundTimeSeconds = other.RoundTimeSeconds;
			}
		}

		public void Set(object other)
		{
			Set(other as LogGameRoundStartOptions);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_SessionIdentifier);
			Helper.TryMarshalDispose(ref m_LevelName);
			Helper.TryMarshalDispose(ref m_ModeName);
		}
	}
}