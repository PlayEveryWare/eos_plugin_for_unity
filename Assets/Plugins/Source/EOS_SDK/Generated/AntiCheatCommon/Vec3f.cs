// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.AntiCheatCommon
{
	/// <summary>
	/// Vector using left-handed coordinate system (as in Unreal Engine)
	/// </summary>
	public class Vec3f : ISettable
	{
		/// <summary>
		/// X axis coordinate - forward direction
		/// </summary>
		public float x { get; set; }

		/// <summary>
		/// Y axis coordinate - right direction
		/// </summary>
		public float y { get; set; }

		/// <summary>
		/// Z axis coordinate - up direction
		/// </summary>
		public float z { get; set; }

		internal void Set(Vec3fInternal? other)
		{
			if (other != null)
			{
				x = other.Value.x;
				y = other.Value.y;
				z = other.Value.z;
			}
		}

		public void Set(object other)
		{
			Set(other as Vec3fInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct Vec3fInternal : ISettable, System.IDisposable
	{
		private float m_x;
		private float m_y;
		private float m_z;

		public float x
		{
			get
			{
				return m_x;
			}

			set
			{
				m_x = value;
			}
		}

		public float y
		{
			get
			{
				return m_y;
			}

			set
			{
				m_y = value;
			}
		}

		public float z
		{
			get
			{
				return m_z;
			}

			set
			{
				m_z = value;
			}
		}

		public void Set(Vec3f other)
		{
			if (other != null)
			{
				x = other.x;
				y = other.y;
				z = other.z;
			}
		}

		public void Set(object other)
		{
			Set(other as Vec3f);
		}

		public void Dispose()
		{
		}
	}
}