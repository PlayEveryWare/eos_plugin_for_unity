// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.AntiCheatCommon
{
	public class RegisterEventParamDef : ISettable
	{
		/// <summary>
		/// Parameter name. Allowed characters are 0-9, A-Z, a-z, '_', '-', '.'
		/// </summary>
		public string ParamName { get; set; }

		/// <summary>
		/// Parameter type
		/// </summary>
		public AntiCheatCommonEventParamType ParamType { get; set; }

		internal void Set(RegisterEventParamDefInternal? other)
		{
			if (other != null)
			{
				ParamName = other.Value.ParamName;
				ParamType = other.Value.ParamType;
			}
		}

		public void Set(object other)
		{
			Set(other as RegisterEventParamDefInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct RegisterEventParamDefInternal : ISettable, System.IDisposable
	{
		private System.IntPtr m_ParamName;
		private AntiCheatCommonEventParamType m_ParamType;

		public string ParamName
		{
			get
			{
				string value;
				Helper.TryMarshalGet(m_ParamName, out value);
				return value;
			}

			set
			{
				Helper.TryMarshalSet(ref m_ParamName, value);
			}
		}

		public AntiCheatCommonEventParamType ParamType
		{
			get
			{
				return m_ParamType;
			}

			set
			{
				m_ParamType = value;
			}
		}

		public void Set(RegisterEventParamDef other)
		{
			if (other != null)
			{
				ParamName = other.ParamName;
				ParamType = other.ParamType;
			}
		}

		public void Set(object other)
		{
			Set(other as RegisterEventParamDef);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_ParamName);
		}
	}
}