// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices
{
	/// <summary>
	/// A page query is part of query options. It is used to allow pagination of query results.
	/// </summary>
	public class PageQuery : ISettable
	{
		/// <summary>
		/// The index into the ordered query results to start the page at.
		/// </summary>
		public int StartIndex { get; set; }

		/// <summary>
		/// The maximum number of results to have in the page.
		/// </summary>
		public int MaxCount { get; set; }

		internal void Set(PageQueryInternal? other)
		{
			if (other != null)
			{
				StartIndex = other.Value.StartIndex;
				MaxCount = other.Value.MaxCount;
			}
		}

		public void Set(object other)
		{
			Set(other as PageQueryInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct PageQueryInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private int m_StartIndex;
		private int m_MaxCount;

		public int StartIndex
		{
			get
			{
				return m_StartIndex;
			}

			set
			{
				m_StartIndex = value;
			}
		}

		public int MaxCount
		{
			get
			{
				return m_MaxCount;
			}

			set
			{
				m_MaxCount = value;
			}
		}

		public void Set(PageQuery other)
		{
			if (other != null)
			{
				m_ApiVersion = Common.PagequeryApiLatest;
				StartIndex = other.StartIndex;
				MaxCount = other.MaxCount;
			}
		}

		public void Set(object other)
		{
			Set(other as PageQuery);
		}

		public void Dispose()
		{
		}
	}
}