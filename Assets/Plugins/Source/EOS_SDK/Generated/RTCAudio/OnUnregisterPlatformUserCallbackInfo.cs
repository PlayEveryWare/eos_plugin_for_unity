// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.RTCAudio
{
	/// <summary>
	/// This struct is passed in with a call to <see cref="OnUnregisterPlatformUserCallback" />.
	/// </summary>
	public struct OnUnregisterPlatformUserCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// This returns:
		/// <see cref="Result.Success" /> if the user was successfully unregistered.
		/// <see cref="Result.InvalidParameters" /> if any of the parameters are incorrect.
		/// <see cref="Result.UnexpectedError" /> otherwise.
		/// </summary>
		public Result ResultCode { get; set; }

		/// <summary>
		/// Client-specified data passed into <see cref="RTCAudioInterface.UnregisterPlatformUser" />.
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// Platform dependent user id.
		/// </summary>
		public Utf8String PlatformUserId { get; set; }

		public Result? GetResultCode()
		{
			return ResultCode;
		}

		internal void Set(ref OnUnregisterPlatformUserCallbackInfoInternal other)
		{
			ResultCode = other.ResultCode;
			ClientData = other.ClientData;
			PlatformUserId = other.PlatformUserId;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct OnUnregisterPlatformUserCallbackInfoInternal : ICallbackInfoInternal, IGettable<OnUnregisterPlatformUserCallbackInfo>, ISettable<OnUnregisterPlatformUserCallbackInfo>, System.IDisposable
	{
		private Result m_ResultCode;
		private System.IntPtr m_ClientData;
		private System.IntPtr m_PlatformUserId;

		public Result ResultCode
		{
			get
			{
				return m_ResultCode;
			}

			set
			{
				m_ResultCode = value;
			}
		}

		public object ClientData
		{
			get
			{
				object value;
				Helper.Get(m_ClientData, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ClientData);
			}
		}

		public System.IntPtr ClientDataAddress
		{
			get
			{
				return m_ClientData;
			}
		}

		public Utf8String PlatformUserId
		{
			get
			{
				Utf8String value;
				Helper.Get(m_PlatformUserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_PlatformUserId);
			}
		}

		public void Set(ref OnUnregisterPlatformUserCallbackInfo other)
		{
			ResultCode = other.ResultCode;
			ClientData = other.ClientData;
			PlatformUserId = other.PlatformUserId;
		}

		public void Set(ref OnUnregisterPlatformUserCallbackInfo? other)
		{
			if (other.HasValue)
			{
				ResultCode = other.Value.ResultCode;
				ClientData = other.Value.ClientData;
				PlatformUserId = other.Value.PlatformUserId;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientData);
			Helper.Dispose(ref m_PlatformUserId);
		}

		public void Get(out OnUnregisterPlatformUserCallbackInfo output)
		{
			output = new OnUnregisterPlatformUserCallbackInfo();
			output.Set(ref this);
		}
	}
}