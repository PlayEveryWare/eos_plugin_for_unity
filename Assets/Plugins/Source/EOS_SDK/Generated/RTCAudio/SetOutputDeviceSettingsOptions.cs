// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.RTCAudio
{
	/// <summary>
	/// This struct is used to call <see cref="RTCAudioInterface.SetOutputDeviceSettings" />.
	/// </summary>
	public struct SetOutputDeviceSettingsOptions
	{
		/// <summary>
		/// The Product User ID of the user who initiated this request.
		/// </summary>
		public ProductUserId LocalUserId { get; set; }

		/// <summary>
		/// The device Id to be used for this user. Pass <see langword="null" /> or empty string to use a default output device.
		/// 
		/// If the device ID is invalid, the default device will be used instead.
		/// Despite this fact, that device ID will be stored and the library will try to move on it when an audio device pool is being changed.
		/// 
		/// The actual hardware audio output device usage depends on the current payload and optimized not to use it
		/// when generated audio frames cannot be processed by someone else based on a scope of rules (For instance, when a client is alone in a room).
		/// <seealso cref="RTCAudioInterface.AddNotifyAudioDevicesChanged" />
		/// </summary>
		public Utf8String RealDeviceId { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct SetOutputDeviceSettingsOptionsInternal : ISettable<SetOutputDeviceSettingsOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_RealDeviceId;

		public ProductUserId LocalUserId
		{
			set
			{
				Helper.Set(value, ref m_LocalUserId);
			}
		}

		public Utf8String RealDeviceId
		{
			set
			{
				Helper.Set(value, ref m_RealDeviceId);
			}
		}

		public void Set(ref SetOutputDeviceSettingsOptions other)
		{
			m_ApiVersion = RTCAudioInterface.SetoutputdevicesettingsApiLatest;
			LocalUserId = other.LocalUserId;
			RealDeviceId = other.RealDeviceId;
		}

		public void Set(ref SetOutputDeviceSettingsOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = RTCAudioInterface.SetoutputdevicesettingsApiLatest;
				LocalUserId = other.Value.LocalUserId;
				RealDeviceId = other.Value.RealDeviceId;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_LocalUserId);
			Helper.Dispose(ref m_RealDeviceId);
		}
	}
}