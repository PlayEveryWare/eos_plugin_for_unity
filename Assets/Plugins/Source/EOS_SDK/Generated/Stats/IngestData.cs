// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Stats
{
	/// <summary>
	/// Contains information about a single stat to ingest.
	/// </summary>
	public class IngestData : ISettable
	{
		/// <summary>
		/// The name of the stat to ingest.
		/// </summary>
		public string StatName { get; set; }

		/// <summary>
		/// The amount to ingest the stat.
		/// </summary>
		public int IngestAmount { get; set; }

		internal void Set(IngestDataInternal? other)
		{
			if (other != null)
			{
				StatName = other.Value.StatName;
				IngestAmount = other.Value.IngestAmount;
			}
		}

		public void Set(object other)
		{
			Set(other as IngestDataInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct IngestDataInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_StatName;
		private int m_IngestAmount;

		public string StatName
		{
			get
			{
				string value;
				Helper.TryMarshalGet(m_StatName, out value);
				return value;
			}

			set
			{
				Helper.TryMarshalSet(ref m_StatName, value);
			}
		}

		public int IngestAmount
		{
			get
			{
				return m_IngestAmount;
			}

			set
			{
				m_IngestAmount = value;
			}
		}

		public void Set(IngestData other)
		{
			if (other != null)
			{
				m_ApiVersion = StatsInterface.IngestdataApiLatest;
				StatName = other.StatName;
				IngestAmount = other.IngestAmount;
			}
		}

		public void Set(object other)
		{
			Set(other as IngestData);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_StatName);
		}
	}
}