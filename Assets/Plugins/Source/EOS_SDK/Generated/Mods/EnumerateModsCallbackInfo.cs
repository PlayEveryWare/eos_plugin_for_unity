// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Mods
{
	/// <summary>
	/// Output parameters for the <see cref="ModsInterface.EnumerateMods" /> Function. These parameters are received through the callback provided to <see cref="ModsInterface.EnumerateMods" />
	/// </summary>
	public class EnumerateModsCallbackInfo : ICallbackInfo, ISettable
	{
		/// <summary>
		/// Result code for the operation. <see cref="Result.Success" /> is returned if the enumeration was successfull, otherwise one of the error codes is returned.
		/// </summary>
		public Result ResultCode { get; private set; }

		/// <summary>
		/// The Epic Online Services Account ID of the user for which mod enumeration was requested
		/// </summary>
		public EpicAccountId LocalUserId { get; private set; }

		/// <summary>
		/// Context that is passed into <see cref="ModsInterface.EnumerateMods" />
		/// </summary>
		public object ClientData { get; private set; }

		/// <summary>
		/// Type of the enumerated mods
		/// </summary>
		public ModEnumerationType Type { get; private set; }

		public Result? GetResultCode()
		{
			return ResultCode;
		}

		internal void Set(EnumerateModsCallbackInfoInternal? other)
		{
			if (other != null)
			{
				ResultCode = other.Value.ResultCode;
				LocalUserId = other.Value.LocalUserId;
				ClientData = other.Value.ClientData;
				Type = other.Value.Type;
			}
		}

		public void Set(object other)
		{
			Set(other as EnumerateModsCallbackInfoInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct EnumerateModsCallbackInfoInternal : ICallbackInfoInternal
	{
		private Result m_ResultCode;
		private System.IntPtr m_LocalUserId;
		private System.IntPtr m_ClientData;
		private ModEnumerationType m_Type;

		public Result ResultCode
		{
			get
			{
				return m_ResultCode;
			}
		}

		public EpicAccountId LocalUserId
		{
			get
			{
				EpicAccountId value;
				Helper.TryMarshalGet(m_LocalUserId, out value);
				return value;
			}
		}

		public object ClientData
		{
			get
			{
				object value;
				Helper.TryMarshalGet(m_ClientData, out value);
				return value;
			}
		}

		public System.IntPtr ClientDataAddress
		{
			get
			{
				return m_ClientData;
			}
		}

		public ModEnumerationType Type
		{
			get
			{
				return m_Type;
			}
		}
	}
}