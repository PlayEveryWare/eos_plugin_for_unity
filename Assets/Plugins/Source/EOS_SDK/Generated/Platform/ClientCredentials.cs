// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Platform
{
	/// <summary>
	/// Client credentials.
	/// </summary>
	public struct ClientCredentials
	{
		/// <summary>
		/// Client ID of the service permissions entry. Set to <see langword="null" /> if no service permissions are used. Max length is <see cref="PlatformInterface.ClientcredentialsClientidMaxLength" />.
		/// </summary>
		public Utf8String ClientId { get; set; }

		/// <summary>
		/// Client secret for accessing the set of permissions. Set to <see langword="null" /> if no service permissions are used. Max length is <see cref="PlatformInterface.ClientcredentialsClientsecretMaxLength" />.
		/// </summary>
		public Utf8String ClientSecret { get; set; }

		internal void Set(ref ClientCredentialsInternal other)
		{
			ClientId = other.ClientId;
			ClientSecret = other.ClientSecret;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct ClientCredentialsInternal : IGettable<ClientCredentials>, ISettable<ClientCredentials>, System.IDisposable
	{
		private System.IntPtr m_ClientId;
		private System.IntPtr m_ClientSecret;

		public Utf8String ClientId
		{
			get
			{
				Utf8String value;
				Helper.Get(m_ClientId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ClientId);
			}
		}

		public Utf8String ClientSecret
		{
			get
			{
				Utf8String value;
				Helper.Get(m_ClientSecret, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ClientSecret);
			}
		}

		public void Set(ref ClientCredentials other)
		{
			ClientId = other.ClientId;
			ClientSecret = other.ClientSecret;
		}

		public void Set(ref ClientCredentials? other)
		{
			if (other.HasValue)
			{
				ClientId = other.Value.ClientId;
				ClientSecret = other.Value.ClientSecret;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientId);
			Helper.Dispose(ref m_ClientSecret);
		}

		public void Get(out ClientCredentials output)
		{
			output = new ClientCredentials();
			output.Set(ref this);
		}
	}
}