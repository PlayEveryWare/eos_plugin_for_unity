// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Platform
{
	/// <summary>
	/// Platform RTC options.
	/// </summary>
	public class RTCOptions : ISettable
	{
		/// <summary>
		/// This field is for platform specific initialization if any.
		/// 
		/// If provided then the structure will be located in <System>/eos_<System>.h.
		/// The structure will be named EOS_<System>_RTCOptions.
		/// </summary>
		public System.IntPtr PlatformSpecificOptions { get; set; }

		internal void Set(RTCOptionsInternal? other)
		{
			if (other != null)
			{
				PlatformSpecificOptions = other.Value.PlatformSpecificOptions;
			}
		}

		public void Set(object other)
		{
			Set(other as RTCOptionsInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct RTCOptionsInternal : ISettable, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_PlatformSpecificOptions;

		public System.IntPtr PlatformSpecificOptions
		{
			get
			{
				return m_PlatformSpecificOptions;
			}

			set
			{
				m_PlatformSpecificOptions = value;
			}
		}

		public void Set(RTCOptions other)
		{
			if (other != null)
			{
				m_ApiVersion = PlatformInterface.RtcoptionsApiLatest;
				PlatformSpecificOptions = other.PlatformSpecificOptions;
			}
		}

		public void Set(object other)
		{
			Set(other as RTCOptions);
		}

		public void Dispose()
		{
			Helper.TryMarshalDispose(ref m_PlatformSpecificOptions);
		}
	}
}