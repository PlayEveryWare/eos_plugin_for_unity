// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Lobby
{
	/// <summary>
	/// Input parameters for the <see cref="LobbyModificationSetAllowedPlatformIdsOptions" /> function.
	/// </summary>
	public struct LobbyModificationSetAllowedPlatformIdsOptions
	{
		/// <summary>
		/// Array of platform IDs indicating the player platforms allowed to register with the session. Platform IDs are
		/// found in the EOS header file, e.g. <see cref="Common.OptEpic" />. For some platforms, the value will be in the EOS Platform specific
		/// header file. If null, the lobby will be unrestricted.
		/// </summary>
		public uint[] AllowedPlatformIds { get; set; }
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct LobbyModificationSetAllowedPlatformIdsOptionsInternal : ISettable<LobbyModificationSetAllowedPlatformIdsOptions>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_AllowedPlatformIds;
		private uint m_AllowedPlatformIdsCount;

		public uint[] AllowedPlatformIds
		{
			set
			{
				Helper.Set(value, ref m_AllowedPlatformIds, out m_AllowedPlatformIdsCount);
			}
		}

		public void Set(ref LobbyModificationSetAllowedPlatformIdsOptions other)
		{
			m_ApiVersion = LobbyModification.LobbymodificationSetallowedplatformidsApiLatest;
			AllowedPlatformIds = other.AllowedPlatformIds;
		}

		public void Set(ref LobbyModificationSetAllowedPlatformIdsOptions? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LobbyModification.LobbymodificationSetallowedplatformidsApiLatest;
				AllowedPlatformIds = other.Value.AllowedPlatformIds;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_AllowedPlatformIds);
		}
	}
}