// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Lobby
{
	public struct LobbyDetailsMemberInfo
	{
		/// <summary>
		/// The Product User ID of the lobby member.
		/// </summary>
		public ProductUserId UserId { get; set; }

		/// <summary>
		/// The platform of the lobby member.
		/// </summary>
		public uint Platform { get; set; }

		/// <summary>
		/// Does this member allow crossplay
		/// </summary>
		public bool AllowsCrossplay { get; set; }

		internal void Set(ref LobbyDetailsMemberInfoInternal other)
		{
			UserId = other.UserId;
			Platform = other.Platform;
			AllowsCrossplay = other.AllowsCrossplay;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct LobbyDetailsMemberInfoInternal : IGettable<LobbyDetailsMemberInfo>, ISettable<LobbyDetailsMemberInfo>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_UserId;
		private uint m_Platform;
		private int m_AllowsCrossplay;

		public ProductUserId UserId
		{
			get
			{
				ProductUserId value;
				Helper.Get(m_UserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_UserId);
			}
		}

		public uint Platform
		{
			get
			{
				return m_Platform;
			}

			set
			{
				m_Platform = value;
			}
		}

		public bool AllowsCrossplay
		{
			get
			{
				bool value;
				Helper.Get(m_AllowsCrossplay, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_AllowsCrossplay);
			}
		}

		public void Set(ref LobbyDetailsMemberInfo other)
		{
			m_ApiVersion = LobbyDetails.LobbydetailsCopymemberinfoApiLatest;
			UserId = other.UserId;
			Platform = other.Platform;
			AllowsCrossplay = other.AllowsCrossplay;
		}

		public void Set(ref LobbyDetailsMemberInfo? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = LobbyDetails.LobbydetailsCopymemberinfoApiLatest;
				UserId = other.Value.UserId;
				Platform = other.Value.Platform;
				AllowsCrossplay = other.Value.AllowsCrossplay;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_UserId);
		}

		public void Get(out LobbyDetailsMemberInfo output)
		{
			output = new LobbyDetailsMemberInfo();
			output.Set(ref this);
		}
	}
}