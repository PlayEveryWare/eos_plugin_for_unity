// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.CustomInvites
{
	/// <summary>
	/// Output parameters for the <see cref="OnRequestToJoinResponseReceivedCallback" /> function.
	/// </summary>
	public struct RequestToJoinResponseReceivedCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="CustomInvitesInterface.AddNotifyRequestToJoinResponseReceived" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// User that sent this response
		/// </summary>
		public ProductUserId FromUserId { get; set; }

		/// <summary>
		/// Recipient Local user id
		/// </summary>
		public ProductUserId ToUserId { get; set; }

		/// <summary>
		/// The Intent associated with this response
		/// </summary>
		public RequestToJoinResponse Response { get; set; }

		public Result? GetResultCode()
		{
			return null;
		}

		internal void Set(ref RequestToJoinResponseReceivedCallbackInfoInternal other)
		{
			ClientData = other.ClientData;
			FromUserId = other.FromUserId;
			ToUserId = other.ToUserId;
			Response = other.Response;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct RequestToJoinResponseReceivedCallbackInfoInternal : ICallbackInfoInternal, IGettable<RequestToJoinResponseReceivedCallbackInfo>, ISettable<RequestToJoinResponseReceivedCallbackInfo>, System.IDisposable
	{
		private System.IntPtr m_ClientData;
		private System.IntPtr m_FromUserId;
		private System.IntPtr m_ToUserId;
		private RequestToJoinResponse m_Response;

		public object ClientData
		{
			get
			{
				object value;
				Helper.Get(m_ClientData, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ClientData);
			}
		}

		public System.IntPtr ClientDataAddress
		{
			get
			{
				return m_ClientData;
			}
		}

		public ProductUserId FromUserId
		{
			get
			{
				ProductUserId value;
				Helper.Get(m_FromUserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_FromUserId);
			}
		}

		public ProductUserId ToUserId
		{
			get
			{
				ProductUserId value;
				Helper.Get(m_ToUserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ToUserId);
			}
		}

		public RequestToJoinResponse Response
		{
			get
			{
				return m_Response;
			}

			set
			{
				m_Response = value;
			}
		}

		public void Set(ref RequestToJoinResponseReceivedCallbackInfo other)
		{
			ClientData = other.ClientData;
			FromUserId = other.FromUserId;
			ToUserId = other.ToUserId;
			Response = other.Response;
		}

		public void Set(ref RequestToJoinResponseReceivedCallbackInfo? other)
		{
			if (other.HasValue)
			{
				ClientData = other.Value.ClientData;
				FromUserId = other.Value.FromUserId;
				ToUserId = other.Value.ToUserId;
				Response = other.Value.Response;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientData);
			Helper.Dispose(ref m_FromUserId);
			Helper.Dispose(ref m_ToUserId);
		}

		public void Get(out RequestToJoinResponseReceivedCallbackInfo output)
		{
			output = new RequestToJoinResponseReceivedCallbackInfo();
			output.Set(ref this);
		}
	}
}