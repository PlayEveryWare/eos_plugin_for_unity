// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Logging
{
	/// <summary>
	/// A structure representing a log message
	/// </summary>
	public class LogMessage : ISettable
	{
		/// <summary>
		/// A string representation of the log message category, encoded in UTF-8. Only valid during the life of the callback, so copy the string if you need it later.
		/// </summary>
		public string Category { get; private set; }

		/// <summary>
		/// The log message, encoded in UTF-8. Only valid during the life of the callback, so copy the string if you need it later.
		/// </summary>
		public string Message { get; private set; }

		/// <summary>
		/// The log level associated with the message
		/// </summary>
		public LogLevel Level { get; private set; }

		internal void Set(LogMessageInternal? other)
		{
			if (other != null)
			{
				Category = other.Value.Category;
				Message = other.Value.Message;
				Level = other.Value.Level;
			}
		}

		public void Set(object other)
		{
			Set(other as LogMessageInternal?);
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct LogMessageInternal
	{
		private System.IntPtr m_Category;
		private System.IntPtr m_Message;
		private LogLevel m_Level;

		public string Category
		{
			get
			{
				string value;
				Helper.TryMarshalGet(m_Category, out value);
				return value;
			}
		}

		public string Message
		{
			get
			{
				string value;
				Helper.TryMarshalGet(m_Message, out value);
				return value;
			}
		}

		public LogLevel Level
		{
			get
			{
				return m_Level;
			}
		}
	}
}