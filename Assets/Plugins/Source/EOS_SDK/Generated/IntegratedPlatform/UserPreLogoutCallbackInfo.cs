// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.IntegratedPlatform
{
	/// <summary>
	/// Data passed to the application in the <see cref="OnUserPreLogoutCallback" /> function. This contains which user and associated
	/// Integrated Platform that was detected as logged-out.
	/// </summary>
	public struct UserPreLogoutCallbackInfo : ICallbackInfo
	{
		/// <summary>
		/// Context that was passed into <see cref="IntegratedPlatformInterface.SetUserPreLogoutCallback" />
		/// </summary>
		public object ClientData { get; set; }

		/// <summary>
		/// The integrated platform the local user logged-out of.
		/// </summary>
		public Utf8String PlatformType { get; set; }

		/// <summary>
		/// String version of platform-dependent user id.
		/// </summary>
		public Utf8String LocalPlatformUserId { get; set; }

		/// <summary>
		/// The Epic Games Account ID associated with this Integrated Platform's User (if there is one)
		/// </summary>
		public EpicAccountId AccountId { get; set; }

		/// <summary>
		/// The EOS Product User ID associated with this Integrated Platform's User (if there is one)
		/// </summary>
		public ProductUserId ProductUserId { get; set; }

		public Result? GetResultCode()
		{
			return null;
		}

		internal void Set(ref UserPreLogoutCallbackInfoInternal other)
		{
			ClientData = other.ClientData;
			PlatformType = other.PlatformType;
			LocalPlatformUserId = other.LocalPlatformUserId;
			AccountId = other.AccountId;
			ProductUserId = other.ProductUserId;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct UserPreLogoutCallbackInfoInternal : ICallbackInfoInternal, IGettable<UserPreLogoutCallbackInfo>, ISettable<UserPreLogoutCallbackInfo>, System.IDisposable
	{
		private System.IntPtr m_ClientData;
		private System.IntPtr m_PlatformType;
		private System.IntPtr m_LocalPlatformUserId;
		private System.IntPtr m_AccountId;
		private System.IntPtr m_ProductUserId;

		public object ClientData
		{
			get
			{
				object value;
				Helper.Get(m_ClientData, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ClientData);
			}
		}

		public System.IntPtr ClientDataAddress
		{
			get
			{
				return m_ClientData;
			}
		}

		public Utf8String PlatformType
		{
			get
			{
				Utf8String value;
				Helper.Get(m_PlatformType, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_PlatformType);
			}
		}

		public Utf8String LocalPlatformUserId
		{
			get
			{
				Utf8String value;
				Helper.Get(m_LocalPlatformUserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_LocalPlatformUserId);
			}
		}

		public EpicAccountId AccountId
		{
			get
			{
				EpicAccountId value;
				Helper.Get(m_AccountId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_AccountId);
			}
		}

		public ProductUserId ProductUserId
		{
			get
			{
				ProductUserId value;
				Helper.Get(m_ProductUserId, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_ProductUserId);
			}
		}

		public void Set(ref UserPreLogoutCallbackInfo other)
		{
			ClientData = other.ClientData;
			PlatformType = other.PlatformType;
			LocalPlatformUserId = other.LocalPlatformUserId;
			AccountId = other.AccountId;
			ProductUserId = other.ProductUserId;
		}

		public void Set(ref UserPreLogoutCallbackInfo? other)
		{
			if (other.HasValue)
			{
				ClientData = other.Value.ClientData;
				PlatformType = other.Value.PlatformType;
				LocalPlatformUserId = other.Value.LocalPlatformUserId;
				AccountId = other.Value.AccountId;
				ProductUserId = other.Value.ProductUserId;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_ClientData);
			Helper.Dispose(ref m_PlatformType);
			Helper.Dispose(ref m_LocalPlatformUserId);
			Helper.Dispose(ref m_AccountId);
			Helper.Dispose(ref m_ProductUserId);
		}

		public void Get(out UserPreLogoutCallbackInfo output)
		{
			output = new UserPreLogoutCallbackInfo();
			output.Set(ref this);
		}
	}
}