// Copyright Epic Games, Inc. All Rights Reserved.
// This file is automatically generated. Changes to this file may be overwritten.

namespace Epic.OnlineServices.Auth
{
	/// <summary>
	/// Intermediate data needed to complete account restriction verification during login flow, returned by <see cref="LoginCallbackInfo" /> when the ResultCode is <see cref="Result.AuthAccountFeatureRestricted" />.
	/// The URI inside should be exposed to the user for entry in a web browser. The URI must be copied out of this struct before completion of the callback.
	/// </summary>
	public struct AccountFeatureRestrictedInfo
	{
		/// <summary>
		/// The end-user verification URI. Users must be asked to open the page in a browser to address the restrictions.
		/// </summary>
		public Utf8String VerificationURI { get; set; }

		internal void Set(ref AccountFeatureRestrictedInfoInternal other)
		{
			VerificationURI = other.VerificationURI;
		}
	}

	[System.Runtime.InteropServices.StructLayout(System.Runtime.InteropServices.LayoutKind.Sequential, Pack = 8)]
	internal struct AccountFeatureRestrictedInfoInternal : IGettable<AccountFeatureRestrictedInfo>, ISettable<AccountFeatureRestrictedInfo>, System.IDisposable
	{
		private int m_ApiVersion;
		private System.IntPtr m_VerificationURI;

		public Utf8String VerificationURI
		{
			get
			{
				Utf8String value;
				Helper.Get(m_VerificationURI, out value);
				return value;
			}

			set
			{
				Helper.Set(value, ref m_VerificationURI);
			}
		}

		public void Set(ref AccountFeatureRestrictedInfo other)
		{
			m_ApiVersion = AuthInterface.AccountfeaturerestrictedinfoApiLatest;
			VerificationURI = other.VerificationURI;
		}

		public void Set(ref AccountFeatureRestrictedInfo? other)
		{
			if (other.HasValue)
			{
				m_ApiVersion = AuthInterface.AccountfeaturerestrictedinfoApiLatest;
				VerificationURI = other.Value.VerificationURI;
			}
		}

		public void Dispose()
		{
			Helper.Dispose(ref m_VerificationURI);
		}

		public void Get(out AccountFeatureRestrictedInfo output)
		{
			output = new AccountFeatureRestrictedInfo();
			output.Set(ref this);
		}
	}
}